[{"id":0,"href":"/packages/autoware_auto_algorithm/","title":"autoware_auto_algorithm","parent":"Contents","content":"autoware_auto_algorithm\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":1,"href":"/packages/autoware_auto_cmake/","title":"autoware_auto_cmake","parent":"Contents","content":"autoware_auto_cmake\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":2,"href":"/packages/autoware_auto_common/","title":"autoware_auto_common","parent":"Contents","content":"autoware_auto_common\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":3,"href":"/packages/autoware_auto_create_pkg/","title":"autoware_auto_create_pkg","parent":"Contents","content":"autoware_auto_create_pkg\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":4,"href":"/packages/autoware_auto_examples/","title":"autoware_auto_examples","parent":"Contents","content":"autoware_auto_examples\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":5,"href":"/packages/autoware_auto_geometry/","title":"autoware_auto_geometry","parent":"Contents","content":"autoware_auto_geometry\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":6,"href":"/packages/autoware_auto_launch/","title":"autoware_auto_launch","parent":"Contents","content":"autoware_auto_launch\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":7,"href":"/packages/autoware_auto_tf2/","title":"autoware_auto_tf2","parent":"Contents","content":"autoware_auto_tf2\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":8,"href":"/packages/autoware_demos/","title":"autoware_demos","parent":"Contents","content":"autoware_demos\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":9,"href":"/packages/autoware_rviz_plugins/","title":"autoware_rviz_plugins","parent":"Contents","content":"autoware_rviz_plugins\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":10,"href":"/packages/autoware_testing/","title":"autoware_testing","parent":"Contents","content":"autoware_testing\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":11,"href":"/packages/avp_web_interface/","title":"avp_web_interface","parent":"Contents","content":"avp_web_interface\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":12,"href":"/packages/behavior_planner/","title":"behavior_planner","parent":"Contents","content":"behavior_planner\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":13,"href":"/packages/behavior_planner_nodes/","title":"behavior_planner_nodes","parent":"Contents","content":"behavior_planner_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":14,"href":"/packages/benchmark_tool/","title":"benchmark_tool","parent":"Contents","content":"benchmark_tool\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":15,"href":"/packages/benchmark_tool_nodes/","title":"benchmark_tool_nodes","parent":"Contents","content":"benchmark_tool_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/benchmark_tool_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/benchmark_tool_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":16,"href":"/categories/","title":"Categories","parent":"Code quality dashboard","content":""},{"id":17,"href":"/","title":"Code quality dashboard","parent":"","content":"Last updated: 2021-08-29 20:40:35 UTC\nLegend Code coverage N/A low: \u0026lt; 75 % medium: \u0026gt;= 75 % high: \u0026gt;= 90 %\nCode metrics   CCN (Cyclomatic Complexity Number)\nlow: \u0026lt; 5 medium: \u0026gt;= 5 high: \u0026gt;= 20\n  LOC (Lines of Code)\nlow: \u0026lt; 1000 medium: \u0026gt;= 1000 high: \u0026gt;= 200\n  Parameter count\nlow: \u0026lt; 50 medium: \u0026gt;= 50 high: \u0026gt;= 6\n     Coverage Metrics  CCN LOC Parameter   Package name  Line [%]  Functions [%]  Branches [%]  Over recommended value  Over required value  Worst value  Over recommended value  Over required value  Worst value  Over recommended value  Over required value  Worst value    autoware_auto_algorithm 100.0 100.0 73.3 0.0 0.0 5.0 0.0 0.0 24.0 0.0 0.0 3.0  autoware_auto_cmake N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  autoware_auto_common 100.0 100.0 73.7 33.0 4.0 205.0 1.0 1.0 1088.0 0.0 1.0 7.0  autoware_auto_create_pkg N/A N/A N/A 1.0 0.0 9.0 0.0 0.0 48.0 0.0 0.0 5.0  autoware_auto_examples N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  autoware_auto_geometry 98.1 99.3 65.6 9.0 0.0 10.0 0.0 0.0 50.0 0.0 2.0 8.0  autoware_auto_launch N/A N/A N/A 0.0 0.0 1.0 0.0 0.0 138.0 0.0 0.0 0.0  autoware_auto_tf2 97.7 100.0 55.9 0.0 0.0 2.0 0.0 0.0 14.0 0.0 0.0 3.0  autoware_demos N/A N/A N/A 0.0 0.0 1.0 0.0 3.0 297.0 0.0 0.0 2.0  autoware_rviz_plugins N/A N/A N/A 2.0 0.0 7.0 0.0 0.0 43.0 0.0 0.0 3.0  autoware_testing N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  avp_web_interface N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  behavior_planner 0.0 0.0 0.0 3.0 0.0 11.0 0.0 0.0 77.0 0.0 0.0 4.0  behavior_planner_nodes 0.0 0.0 0.0 2.0 0.0 12.0 0.0 0.0 96.0 0.0 0.0 2.0  benchmark_tool 82.0 90.9 50.9 31.0 7.0 60.0 0.0 0.0 181.0 0.0 15.0 21.0  benchmark_tool_nodes N/A N/A N/A 4.0 0.0 8.0 0.0 1.0 207.0 0.0 0.0 3.0  controller_common 92.7 89.3 66.7 0.0 0.0 4.0 0.0 0.0 29.0 0.0 0.0 4.0  controller_common_nodes 79.7 85.0 22.4 2.0 0.0 10.0 0.0 0.0 56.0 0.0 1.0 8.0  controller_testing N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  covariance_insertion 100.0 100.0 N/A 0.0 0.0 5.0 0.0 0.0 19.0 0.0 0.0 3.0  covariance_insertion_nodes 73.2 31.7 40.7 1.0 0.0 10.0 0.0 0.0 26.0 0.0 0.0 1.0  euclidean_cluster 72.0 77.4 46.2 1.0 0.0 7.0 0.0 0.0 33.0 0.0 0.0 6.0  euclidean_cluster_nodes 30.7 22.2 33.8 2.0 0.0 7.0 0.0 0.0 76.0 0.0 0.0 2.0  fake_test_node 84.3 100.0 24.5 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  filter_node_base 88.1 90.9 23.6 0.0 0.0 2.0 0.0 0.0 18.0 0.0 0.0 3.0  gnss_conversion_nodes 96.7 100.0 41.6 0.0 0.0 4.0 0.0 0.0 41.0 0.0 0.0 3.0  ground_truth_detections 97.8 100.0 55.2 0.0 0.0 4.0 0.0 0.0 21.0 0.0 0.0 1.0  had_map_utils 17.3 18.6 12.3 7.0 0.0 18.0 0.0 0.0 74.0 0.0 3.0 9.0  hungarian_assigner 94.8 24.0 65.7 6.0 0.0 14.0 0.0 0.0 59.0 0.0 0.0 3.0  joystick_vehicle_interface 57.9 78.6 49.3 2.0 1.0 22.0 0.0 0.0 73.0 0.0 0.0 4.0  joystick_vehicle_interface_nodes 95.7 100.0 49.7 1.0 0.0 6.0 0.0 0.0 96.0 0.0 0.0 2.0  lane_planner 100.0 100.0 62.1 1.0 0.0 10.0 0.0 0.0 64.0 0.0 0.0 3.0  lane_planner_nodes 100.0 100.0 50.0 0.0 0.0 1.0 0.0 0.0 25.0 0.0 0.0 2.0  lanelet2_global_planner 86.6 89.5 40.5 4.0 1.0 22.0 0.0 0.0 64.0 0.0 0.0 4.0  lanelet2_global_planner_nodes N/A N/A N/A 0.0 0.0 5.0 0.0 0.0 32.0 0.0 0.0 4.0  lanelet2_map_provider 7.7 18.2 1.0 2.0 0.0 9.0 0.0 0.0 71.0 0.0 0.0 4.0  lexus_rx_450h_description N/A N/A N/A 0.0 0.0 1.0 0.0 0.0 15.0 0.0 0.0 0.0  lgsvl_interface 38.1 42.9 20.0 3.0 1.0 26.0 0.0 0.0 145.0 0.0 1.0 13.0  lidar_integration 76.1 75.0 27.5 8.0 2.0 25.0 0.0 0.0 150.0 0.0 3.0 8.0  lidar_utils 84.2 93.5 46.3 3.0 0.0 12.0 0.0 0.0 39.0 0.0 0.0 5.0  localization_common 60.9 60.0 32.1 1.0 0.0 6.0 0.0 0.0 23.0 0.0 0.0 4.0  localization_nodes 39.3 60.0 12.1 0.0 0.0 5.0 0.0 0.0 42.0 0.0 1.0 8.0  localization_system_tests N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  measurement_conversion 88.6 89.5 49.7 0.0 0.0 4.0 0.0 0.0 22.0 0.0 0.0 5.0  motion_common 85.9 80.8 54.4 2.0 0.0 10.0 0.0 0.0 48.0 0.0 3.0 9.0  motion_model 95.7 53.6 54.6 0.0 0.0 2.0 0.0 0.0 65.0 0.0 0.0 2.0  motion_model_testing_simulator N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  motion_testing 82.3 69.2 41.8 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  motion_testing_nodes 95.7 100.0 56.5 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  mpark_variant_vendor N/A N/A N/A 11.0 2.0 33.0 0.0 0.0 43.0 0.0 0.0 2.0  mpc_controller 80.2 92.9 47.0 2.0 0.0 12.0 0.0 0.0 61.0 0.0 1.0 7.0  mpc_controller_nodes 5.9 25.0 0.2 0.0 0.0 5.0 0.0 0.0 134.0 0.0 1.0 9.0  ndt 89.3 93.1 47.2 4.0 1.0 21.0 0.0 0.0 81.0 0.0 0.0 4.0  ndt_mapping_nodes 39.3 31.2 20.6 1.0 0.0 8.0 0.0 0.0 71.0 0.0 0.0 2.0  ndt_nodes 55.1 47.4 25.6 0.0 0.0 5.0 0.0 0.0 50.0 0.0 0.0 3.0  ne_raptor_interface 0.0 0.0 0.0 7.0 0.0 18.0 0.0 0.0 86.0 0.0 1.0 11.0  object_collision_estimator 99.0 100.0 80.4 1.0 0.0 7.0 0.0 0.0 41.0 0.0 0.0 5.0  object_collision_estimator_nodes 81.7 88.9 31.6 0.0 0.0 5.0 0.0 0.0 76.0 0.0 0.0 2.0  off_map_obstacles_filter 0.0 0.0 0.0 1.0 0.0 11.0 0.0 0.0 52.0 0.0 0.0 4.0  off_map_obstacles_filter_nodes 0.0 0.0 0.0 0.0 0.0 5.0 0.0 0.0 31.0 0.0 0.0 1.0  optimization 93.7 97.8 59.2 5.0 0.0 13.0 0.0 0.0 80.0 0.0 0.0 6.0  osqp_interface 100.0 100.0 57.7 0.0 0.0 5.0 0.0 0.0 34.0 0.0 0.0 6.0  outlier_filter 100.0 100.0 57.1 0.0 0.0 4.0 0.0 0.0 22.0 0.0 0.0 4.0  outlier_filter_nodes N/A N/A N/A 0.0 0.0 5.0 0.0 0.0 36.0 0.0 0.0 2.0  parking_planner 42.9 46.7 30.8 5.0 0.0 14.0 0.0 0.0 80.0 0.0 1.0 8.0  parking_planner_nodes 32.4 40.0 31.2 0.0 0.0 3.0 0.0 0.0 50.0 0.0 0.0 6.0  point_cloud_filter_transform_nodes 96.5 100.0 45.7 2.0 0.0 10.0 0.0 0.0 79.0 0.0 1.0 9.0  point_cloud_fusion 93.8 100.0 58.3 1.0 0.0 7.0 0.0 0.0 32.0 0.0 0.0 3.0  point_cloud_fusion_nodes 85.7 100.0 23.1 1.0 0.0 8.0 0.0 0.0 44.0 0.0 1.0 8.0  point_cloud_mapping 91.5 85.7 69.0 1.0 0.0 7.0 0.0 0.0 29.0 0.0 0.0 3.0  point_type_adapter 70.3 90.9 26.6 1.0 0.0 9.0 0.0 0.0 56.0 0.0 0.0 1.0  polygon_remover 50.6 69.2 22.7 0.0 0.0 4.0 0.0 0.0 48.0 0.0 0.0 2.0  polygon_remover_nodes 57.6 80.0 26.0 1.0 0.0 7.0 0.0 0.0 75.0 0.0 0.0 1.0  pure_pursuit 89.7 95.0 69.4 5.0 0.0 7.0 0.0 0.0 54.0 0.0 1.0 8.0  pure_pursuit_nodes 75.0 66.7 43.4 0.0 0.0 4.0 0.0 0.0 23.0 0.0 0.0 3.0  ray_ground_classifier 94.3 95.8 75.0 4.0 0.0 12.0 0.0 0.0 56.0 0.0 1.0 8.0  ray_ground_classifier_nodes 60.8 100.0 24.3 1.0 1.0 29.0 0.0 0.0 143.0 0.0 0.0 1.0  recordreplay_planner 93.1 96.2 53.9 1.0 0.0 17.0 0.0 0.0 45.0 0.0 0.0 3.0  recordreplay_planner_nodes 25.3 23.8 17.2 1.0 0.0 7.0 0.0 0.0 59.0 0.0 0.0 4.0  reference_tracking_controller N/A N/A N/A 0.0 0.0 1.0 0.0 0.0 4.0 0.0 0.0 2.0  rosapi N/A N/A N/A 5.0 0.0 13.0 0.0 0.0 46.0 0.0 0.0 4.0  rosbridge_library N/A N/A N/A 34.0 2.0 25.0 0.0 0.0 85.0 0.0 3.0 7.0  rosbridge_server N/A N/A N/A 5.0 1.0 47.0 0.0 0.0 173.0 0.0 0.0 3.0  rosbridge_suite N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  signal_filters 93.9 91.0 66.7 0.0 0.0 4.0 0.0 0.0 18.0 0.0 0.0 2.0  simple_planning_simulator 92.4 89.8 44.5 5.0 0.0 8.0 0.0 0.0 51.0 0.0 2.0 10.0  spinnaker_camera_driver N/A N/A N/A 4.0 0.0 14.0 0.0 0.0 57.0 0.0 1.0 7.0  spinnaker_camera_nodes N/A N/A N/A 0.0 0.0 4.0 0.0 0.0 47.0 0.0 0.0 3.0  ssc_interface 14.5 10.0 2.4 3.0 0.0 13.0 0.0 0.0 58.0 0.0 0.0 6.0  state_estimation 96.6 75.6 47.8 0.0 0.0 4.0 0.0 0.0 24.0 0.0 0.0 4.0  state_estimation_nodes 95.2 79.8 51.1 2.0 0.0 7.0 0.0 0.0 50.0 0.0 1.0 7.0  state_vector 96.4 18.0 20.5 0.0 0.0 2.0 0.0 0.0 13.0 0.0 0.0 2.0  test_trajectory_following N/A N/A N/A 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  time_utils 97.4 100.0 54.5 0.0 0.0 4.0 0.0 0.0 34.0 0.0 0.0 3.0  tracking 91.9 97.1 53.3 4.0 0.0 10.0 0.0 0.0 52.0 0.0 0.0 3.0  tracking_nodes N/A N/A N/A 1.0 0.0 7.0 0.0 0.0 31.0 0.0 0.0 2.0  tracking_test_framework 94.5 91.5 57.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0  trajectory_follower 91.4 84.5 36.7 14.0 0.0 17.0 0.0 0.0 89.0 0.0 5.0 8.0  trajectory_follower_nodes 100.0 100.0 42.2 0.0 0.0 4.0 0.0 0.0 19.0 0.0 0.0 1.0  trajectory_planner_node_base 70.0 83.3 18.2 0.0 0.0 3.0 0.0 0.0 27.0 0.0 0.0 3.0  trajectory_smoother 100.0 100.0 90.9 1.0 0.0 8.0 0.0 0.0 30.0 0.0 0.0 1.0  trajectory_spoofer 74.8 73.3 46.9 0.0 0.0 5.0 0.0 0.0 41.0 0.0 0.0 6.0  tvm_utility N/A N/A N/A 0.0 0.0 5.0 0.0 0.0 51.0 0.0 0.0 6.0  vehicle_interface 80.8 75.5 34.6 12.0 1.0 25.0 0.0 0.0 99.0 0.0 2.0 10.0  velodyne_driver 96.7 91.4 80.8 0.0 0.0 5.0 0.0 0.0 32.0 0.0 0.0 4.0  velodyne_nodes 84.9 40.0 47.6 2.0 0.0 7.0 0.0 0.0 41.0 0.0 0.0 6.0  voxel_grid 100.0 86.7 71.1 0.0 0.0 5.0 0.0 0.0 35.0 0.0 0.0 4.0  voxel_grid_nodes 89.3 92.3 45.4 0.0 0.0 5.0 0.0 0.0 45.0 0.0 0.0 2.0  xsens_driver 41.3 53.1 14.4 6.0 1.0 44.0 0.0 0.0 115.0 0.0 0.0 4.0  xsens_nodes 52.6 33.3 23.5 0.0 0.0 3.0 0.0 0.0 19.0 0.0 0.0 5.0     Test result for all packages Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Clang-Tidy  You can access the Clang-Tidy results here.  "},{"id":18,"href":"/packages/","title":"Contents","parent":"Code quality dashboard","content":"Contents\n   autoware_auto_algorithm: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_cmake: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_create_pkg: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_examples: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_geometry: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_launch: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_tf2: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_demos: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_rviz_plugins: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     avp_web_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     behavior_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     behavior_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     benchmark_tool: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     benchmark_tool_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     controller_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     controller_common_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     controller_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     covariance_insertion: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     covariance_insertion_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     euclidean_cluster: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     euclidean_cluster_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     fake_test_node: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     filter_node_base: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     gnss_conversion_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ground_truth_detections: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     had_map_utils: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     hungarian_assigner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     joystick_vehicle_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     joystick_vehicle_interface_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lane_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lane_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lanelet2_global_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lanelet2_global_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lanelet2_map_provider: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lexus_rx_450h_description: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lgsvl_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lidar_integration: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lidar_utils: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     localization_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     localization_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     localization_system_tests: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     measurement_conversion: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_model: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_model_testing_simulator: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_testing_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     mpark_variant_vendor: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     mpc_controller: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     mpc_controller_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ndt: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ndt_mapping_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ndt_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ne_raptor_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     object_collision_estimator: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     object_collision_estimator_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     off_map_obstacles_filter: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     off_map_obstacles_filter_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     optimization: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     osqp_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     outlier_filter: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     outlier_filter_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     parking_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     parking_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_filter_transform_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_fusion: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_fusion_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_mapping: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_type_adapter: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     polygon_remover: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     polygon_remover_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     pure_pursuit: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     pure_pursuit_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ray_ground_classifier: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ray_ground_classifier_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     recordreplay_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     recordreplay_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     reference_tracking_controller: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     rosapi: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     rosbridge_library: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     rosbridge_server: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     rosbridge_suite: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     signal_filters: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     simple_planning_simulator: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     spinnaker_camera_driver: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     spinnaker_camera_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ssc_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     state_estimation: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     state_estimation_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     state_vector: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     test_trajectory_following: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     time_utils: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tracking: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tracking_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tracking_test_framework: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_follower: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_follower_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_planner_node_base: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_smoother: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_spoofer: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tvm_utility: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     vehicle_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     velodyne_driver: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     velodyne_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     voxel_grid: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     voxel_grid_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     xsens_driver: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     xsens_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     "},{"id":19,"href":"/packages/controller_common/","title":"controller_common","parent":"Contents","content":"controller_common\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":20,"href":"/packages/controller_common_nodes/","title":"controller_common_nodes","parent":"Contents","content":"controller_common_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":21,"href":"/packages/controller_testing/","title":"controller_testing","parent":"Contents","content":"controller_testing\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":22,"href":"/packages/covariance_insertion/","title":"covariance_insertion","parent":"Contents","content":"covariance_insertion\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":23,"href":"/packages/covariance_insertion_nodes/","title":"covariance_insertion_nodes","parent":"Contents","content":"covariance_insertion_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":24,"href":"/packages/euclidean_cluster/","title":"euclidean_cluster","parent":"Contents","content":"euclidean_cluster\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":25,"href":"/packages/euclidean_cluster_nodes/","title":"euclidean_cluster_nodes","parent":"Contents","content":"euclidean_cluster_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":26,"href":"/packages/fake_test_node/","title":"fake_test_node","parent":"Contents","content":"fake_test_node\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":27,"href":"/packages/filter_node_base/","title":"filter_node_base","parent":"Contents","content":"filter_node_base\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":28,"href":"/packages/gnss_conversion_nodes/","title":"gnss_conversion_nodes","parent":"Contents","content":"gnss_conversion_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":29,"href":"/packages/ground_truth_detections/","title":"ground_truth_detections","parent":"Contents","content":"ground_truth_detections\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":30,"href":"/packages/had_map_utils/","title":"had_map_utils","parent":"Contents","content":"had_map_utils\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":31,"href":"/packages/hungarian_assigner/","title":"hungarian_assigner","parent":"Contents","content":"hungarian_assigner\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":32,"href":"/packages/joystick_vehicle_interface/","title":"joystick_vehicle_interface","parent":"Contents","content":"joystick_vehicle_interface\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":33,"href":"/packages/joystick_vehicle_interface_nodes/","title":"joystick_vehicle_interface_nodes","parent":"Contents","content":"joystick_vehicle_interface_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":34,"href":"/packages/lane_planner/","title":"lane_planner","parent":"Contents","content":"lane_planner\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":35,"href":"/packages/lane_planner_nodes/","title":"lane_planner_nodes","parent":"Contents","content":"lane_planner_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":36,"href":"/packages/lanelet2_global_planner/","title":"lanelet2_global_planner","parent":"Contents","content":"lanelet2_global_planner\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":37,"href":"/packages/lanelet2_global_planner_nodes/","title":"lanelet2_global_planner_nodes","parent":"Contents","content":"lanelet2_global_planner_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":38,"href":"/packages/lanelet2_map_provider/","title":"lanelet2_map_provider","parent":"Contents","content":"lanelet2_map_provider\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":39,"href":"/packages/lexus_rx_450h_description/","title":"lexus_rx_450h_description","parent":"Contents","content":"lexus_rx_450h_description\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":40,"href":"/packages/lgsvl_interface/","title":"lgsvl_interface","parent":"Contents","content":"lgsvl_interface\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":41,"href":"/packages/lidar_integration/","title":"lidar_integration","parent":"Contents","content":"lidar_integration\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":42,"href":"/packages/lidar_utils/","title":"lidar_utils","parent":"Contents","content":"lidar_utils\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":43,"href":"/packages/localization_common/","title":"localization_common","parent":"Contents","content":"localization_common\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":44,"href":"/packages/localization_nodes/","title":"localization_nodes","parent":"Contents","content":"localization_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":45,"href":"/packages/localization_system_tests/","title":"localization_system_tests","parent":"Contents","content":"localization_system_tests\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":46,"href":"/packages/measurement_conversion/","title":"measurement_conversion","parent":"Contents","content":"measurement_conversion\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":47,"href":"/packages/motion_common/","title":"motion_common","parent":"Contents","content":"motion_common\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":48,"href":"/packages/motion_model/","title":"motion_model","parent":"Contents","content":"motion_model\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":49,"href":"/packages/motion_model_testing_simulator/","title":"motion_model_testing_simulator","parent":"Contents","content":"motion_model_testing_simulator\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":50,"href":"/packages/motion_testing/","title":"motion_testing","parent":"Contents","content":"motion_testing\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":51,"href":"/packages/motion_testing_nodes/","title":"motion_testing_nodes","parent":"Contents","content":"motion_testing_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":52,"href":"/packages/mpark_variant_vendor/","title":"mpark_variant_vendor","parent":"Contents","content":"mpark_variant_vendor\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":53,"href":"/packages/mpc_controller/","title":"mpc_controller","parent":"Contents","content":"mpc_controller\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":54,"href":"/packages/mpc_controller_nodes/","title":"mpc_controller_nodes","parent":"Contents","content":"mpc_controller_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":55,"href":"/packages/ndt/","title":"ndt","parent":"Contents","content":"ndt\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":56,"href":"/packages/ndt_mapping_nodes/","title":"ndt_mapping_nodes","parent":"Contents","content":"ndt_mapping_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":57,"href":"/packages/ndt_nodes/","title":"ndt_nodes","parent":"Contents","content":"ndt_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":58,"href":"/packages/ne_raptor_interface/","title":"ne_raptor_interface","parent":"Contents","content":"ne_raptor_interface\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":59,"href":"/packages/object_collision_estimator/","title":"object_collision_estimator","parent":"Contents","content":"object_collision_estimator\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":60,"href":"/packages/object_collision_estimator_nodes/","title":"object_collision_estimator_nodes","parent":"Contents","content":"object_collision_estimator_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":61,"href":"/packages/off_map_obstacles_filter/","title":"off_map_obstacles_filter","parent":"Contents","content":"off_map_obstacles_filter\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":62,"href":"/packages/off_map_obstacles_filter_nodes/","title":"off_map_obstacles_filter_nodes","parent":"Contents","content":"off_map_obstacles_filter_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":63,"href":"/packages/optimization/","title":"optimization","parent":"Contents","content":"optimization\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":64,"href":"/packages/osqp_interface/","title":"osqp_interface","parent":"Contents","content":"osqp_interface\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":65,"href":"/packages/outlier_filter/","title":"outlier_filter","parent":"Contents","content":"outlier_filter\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":66,"href":"/packages/outlier_filter_nodes/","title":"outlier_filter_nodes","parent":"Contents","content":"outlier_filter_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":67,"href":"/packages/parking_planner/","title":"parking_planner","parent":"Contents","content":"parking_planner\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":68,"href":"/packages/parking_planner_nodes/","title":"parking_planner_nodes","parent":"Contents","content":"parking_planner_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/parking_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/parking_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":69,"href":"/packages/point_cloud_filter_transform_nodes/","title":"point_cloud_filter_transform_nodes","parent":"Contents","content":"point_cloud_filter_transform_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":70,"href":"/packages/point_cloud_fusion/","title":"point_cloud_fusion","parent":"Contents","content":"point_cloud_fusion\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":71,"href":"/packages/point_cloud_fusion_nodes/","title":"point_cloud_fusion_nodes","parent":"Contents","content":"point_cloud_fusion_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":72,"href":"/packages/point_cloud_mapping/","title":"point_cloud_mapping","parent":"Contents","content":"point_cloud_mapping\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":73,"href":"/packages/point_type_adapter/","title":"point_type_adapter","parent":"Contents","content":"point_type_adapter\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":74,"href":"/packages/polygon_remover/","title":"polygon_remover","parent":"Contents","content":"polygon_remover\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":75,"href":"/packages/polygon_remover_nodes/","title":"polygon_remover_nodes","parent":"Contents","content":"polygon_remover_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":76,"href":"/packages/pure_pursuit/","title":"pure_pursuit","parent":"Contents","content":"pure_pursuit\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":77,"href":"/packages/pure_pursuit_nodes/","title":"pure_pursuit_nodes","parent":"Contents","content":"pure_pursuit_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":78,"href":"/packages/ray_ground_classifier/","title":"ray_ground_classifier","parent":"Contents","content":"ray_ground_classifier\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":79,"href":"/packages/ray_ground_classifier_nodes/","title":"ray_ground_classifier_nodes","parent":"Contents","content":"ray_ground_classifier_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":80,"href":"/packages/recordreplay_planner/","title":"recordreplay_planner","parent":"Contents","content":"recordreplay_planner\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":81,"href":"/packages/recordreplay_planner_nodes/","title":"recordreplay_planner_nodes","parent":"Contents","content":"recordreplay_planner_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":82,"href":"/packages/reference_tracking_controller/","title":"reference_tracking_controller","parent":"Contents","content":"reference_tracking_controller\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":83,"href":"/packages/rosapi/","title":"rosapi","parent":"Contents","content":"rosapi\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosapi/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosapi\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosapi/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosapi\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosapi/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosapi\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosapi/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosapi\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":84,"href":"/packages/rosbridge_library/","title":"rosbridge_library","parent":"Contents","content":"rosbridge_library\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_library/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_library\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_library/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_library\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_library/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_library\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_library/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_library\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":85,"href":"/packages/rosbridge_server/","title":"rosbridge_server","parent":"Contents","content":"rosbridge_server\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_server/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_server\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_server/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_server\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_server/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_server\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_server/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_server\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":86,"href":"/packages/rosbridge_suite/","title":"rosbridge_suite","parent":"Contents","content":"rosbridge_suite\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_suite/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_suite\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_suite/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_suite\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_suite/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_suite\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/rosbridge_suite/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/rosbridge_suite\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":87,"href":"/packages/signal_filters/","title":"signal_filters","parent":"Contents","content":"signal_filters\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":88,"href":"/packages/simple_planning_simulator/","title":"simple_planning_simulator","parent":"Contents","content":"simple_planning_simulator\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":89,"href":"/packages/spinnaker_camera_driver/","title":"spinnaker_camera_driver","parent":"Contents","content":"spinnaker_camera_driver\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":90,"href":"/packages/spinnaker_camera_nodes/","title":"spinnaker_camera_nodes","parent":"Contents","content":"spinnaker_camera_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":91,"href":"/packages/ssc_interface/","title":"ssc_interface","parent":"Contents","content":"ssc_interface\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":92,"href":"/packages/state_estimation/","title":"state_estimation","parent":"Contents","content":"state_estimation\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":93,"href":"/packages/state_estimation_nodes/","title":"state_estimation_nodes","parent":"Contents","content":"state_estimation_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":94,"href":"/packages/state_vector/","title":"state_vector","parent":"Contents","content":"state_vector\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":95,"href":"/tags/","title":"Tags","parent":"Code quality dashboard","content":""},{"id":96,"href":"/packages/test_trajectory_following/","title":"test_trajectory_following","parent":"Contents","content":"test_trajectory_following\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":97,"href":"/packages/time_utils/","title":"time_utils","parent":"Contents","content":"time_utils\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":98,"href":"/packages/tracking/","title":"tracking","parent":"Contents","content":"tracking\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":99,"href":"/packages/tracking_nodes/","title":"tracking_nodes","parent":"Contents","content":"tracking_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":100,"href":"/packages/tracking_test_framework/","title":"tracking_test_framework","parent":"Contents","content":"tracking_test_framework\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":101,"href":"/packages/trajectory_follower/","title":"trajectory_follower","parent":"Contents","content":"trajectory_follower\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":102,"href":"/packages/trajectory_follower_nodes/","title":"trajectory_follower_nodes","parent":"Contents","content":"trajectory_follower_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":103,"href":"/packages/trajectory_planner_node_base/","title":"trajectory_planner_node_base","parent":"Contents","content":"trajectory_planner_node_base\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":104,"href":"/packages/trajectory_smoother/","title":"trajectory_smoother","parent":"Contents","content":"trajectory_smoother\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":105,"href":"/packages/trajectory_spoofer/","title":"trajectory_spoofer","parent":"Contents","content":"trajectory_spoofer\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":106,"href":"/packages/tvm_utility/","title":"tvm_utility","parent":"Contents","content":"tvm_utility\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":107,"href":"/packages/vehicle_interface/","title":"vehicle_interface","parent":"Contents","content":"vehicle_interface\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":108,"href":"/packages/velodyne_driver/","title":"velodyne_driver","parent":"Contents","content":"velodyne_driver\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":109,"href":"/packages/velodyne_nodes/","title":"velodyne_nodes","parent":"Contents","content":"velodyne_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":110,"href":"/packages/voxel_grid/","title":"voxel_grid","parent":"Contents","content":"voxel_grid\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":111,"href":"/packages/voxel_grid_nodes/","title":"voxel_grid_nodes","parent":"Contents","content":"voxel_grid_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":112,"href":"/packages/xsens_driver/","title":"xsens_driver","parent":"Contents","content":"xsens_driver\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "},{"id":113,"href":"/packages/xsens_nodes/","title":"xsens_nodes","parent":"Contents","content":"xsens_nodes\n Test result Code coverage     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_nodes/coverage.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_nodes\\/coverage.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_nodes/loc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_nodes\\/loc.json', fig.data, fig.layout, {responsive: true}); });     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  "}]