[{"id":0,"href":"/packages/apollo_lidar_segmentation/","title":"apollo_lidar_segmentation","parent":"Contents","content":"apollo_lidar_segmentation\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Ambroise Vincent 2   2. Esteve Fernandez 1   3.      "},{"id":1,"href":"/packages/apollo_lidar_segmentation_nodes/","title":"apollo_lidar_segmentation_nodes","parent":"Contents","content":"apollo_lidar_segmentation_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/apollo_lidar_segmentation_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/apollo_lidar_segmentation_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Ambroise Vincent 2   2. Esteve Fernandez 1   3.      "},{"id":2,"href":"/packages/astar_search/","title":"astar_search","parent":"Contents","content":"astar_search\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/astar_search/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/astar_search\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daniel Marczak 1   2.     3.      "},{"id":3,"href":"/packages/autoware_auto_algorithm/","title":"autoware_auto_algorithm","parent":"Contents","content":"autoware_auto_algorithm\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_algorithm/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_algorithm\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 4   2. Esteve Fernandez 4   3. MIURA Yasuyuki 2    "},{"id":4,"href":"/packages/autoware_auto_cmake/","title":"autoware_auto_cmake","parent":"Contents","content":"autoware_auto_cmake\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_cmake/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_cmake\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 6   2. Joshua Whitley 4   3. MIURA Yasuyuki 2    "},{"id":5,"href":"/packages/autoware_auto_common/","title":"autoware_auto_common","parent":"Contents","content":"autoware_auto_common\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_common/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_common\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 7   2. Esteve Fernandez 6   3. Igor Bogoslavskyi 6    "},{"id":6,"href":"/packages/autoware_auto_control_msgs/","title":"autoware_auto_control_msgs","parent":"Contents","content":"autoware_auto_control_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_control_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_control_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daisuke Nishimatsu 1   2.     3.      "},{"id":7,"href":"/packages/autoware_auto_create_pkg/","title":"autoware_auto_create_pkg","parent":"Contents","content":"autoware_auto_create_pkg\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_create_pkg/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_create_pkg\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 5   2. Joshua Whitley 4   3. MIURA Yasuyuki 3    "},{"id":8,"href":"/packages/autoware_auto_debug_msgs/","title":"autoware_auto_debug_msgs","parent":"Contents","content":"autoware_auto_debug_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_debug_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_debug_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Mehmet Doğru 1   2.     3.      "},{"id":9,"href":"/packages/autoware_auto_examples/","title":"autoware_auto_examples","parent":"Contents","content":"autoware_auto_examples\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_examples/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_examples\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 6   2. Joshua Whitley 5   3. Igor Bogoslavskyi 1    "},{"id":10,"href":"/packages/autoware_auto_geometry/","title":"autoware_auto_geometry","parent":"Contents","content":"autoware_auto_geometry\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 12   2. Jeffrey Kane Johnson 9   3. Joshua Whitley 6    "},{"id":11,"href":"/packages/autoware_auto_geometry_msgs/","title":"autoware_auto_geometry_msgs","parent":"Contents","content":"autoware_auto_geometry_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_geometry_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_geometry_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 1   2. Daisuke Nishimatsu 1   3.      "},{"id":12,"href":"/packages/autoware_auto_launch/","title":"autoware_auto_launch","parent":"Contents","content":"autoware_auto_launch\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_launch/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_launch\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daniel Marczak 2   2. Maxime CLEMENT 2   3. Michał Drwięga 2    "},{"id":13,"href":"/packages/autoware_auto_mapping_msgs/","title":"autoware_auto_mapping_msgs","parent":"Contents","content":"autoware_auto_mapping_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_mapping_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_mapping_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daisuke Nishimatsu 1   2.     3.      "},{"id":14,"href":"/packages/autoware_auto_msgs/","title":"autoware_auto_msgs","parent":"Contents","content":"autoware_auto_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 21   2. Esteve Fernandez 7   3. Maxime CLEMENT 5    "},{"id":15,"href":"/packages/autoware_auto_perception_msgs/","title":"autoware_auto_perception_msgs","parent":"Contents","content":"autoware_auto_perception_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_perception_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_perception_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 1   2. M. Fatih Cırıt 1   3. Daisuke Nishimatsu 1    "},{"id":16,"href":"/packages/autoware_auto_planning_msgs/","title":"autoware_auto_planning_msgs","parent":"Contents","content":"autoware_auto_planning_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_planning_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_planning_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. M. Fatih Cırıt 4   2. Maxime CLEMENT 1   3. Mehmet Doğru 1    "},{"id":17,"href":"/packages/autoware_auto_system_msgs/","title":"autoware_auto_system_msgs","parent":"Contents","content":"autoware_auto_system_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_system_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_system_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daisuke Nishimatsu 1   2.     3.      "},{"id":18,"href":"/packages/autoware_auto_tf2/","title":"autoware_auto_tf2","parent":"Contents","content":"autoware_auto_tf2\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_tf2/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_tf2\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 4   2. Jit Ray Chowdhury 2   3. Esteve Fernandez 1    "},{"id":19,"href":"/packages/autoware_auto_vehicle_msgs/","title":"autoware_auto_vehicle_msgs","parent":"Contents","content":"autoware_auto_vehicle_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_auto_vehicle_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_auto_vehicle_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 1   2. Daisuke Nishimatsu 1   3.      "},{"id":20,"href":"/packages/autoware_demos/","title":"autoware_demos","parent":"Contents","content":"autoware_demos\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_demos/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_demos\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Gowtham Ranganathan 6   2. Yunus Emre Çalışkan 5   3. Igor Bogoslavskyi 4    "},{"id":21,"href":"/packages/autoware_rviz_plugins/","title":"autoware_rviz_plugins","parent":"Contents","content":"autoware_rviz_plugins\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_rviz_plugins/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_rviz_plugins\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 4   2. Maxime CLEMENT 2   3. gowtham.ranganathan 2    "},{"id":22,"href":"/packages/autoware_state_monitor/","title":"autoware_state_monitor","parent":"Contents","content":"autoware_state_monitor\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_state_monitor/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_state_monitor\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 1   2. Esteve Fernandez 1   3. Michał Drwięga 1    "},{"id":23,"href":"/packages/autoware_testing/","title":"autoware_testing","parent":"Contents","content":"autoware_testing\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/autoware_testing/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/autoware_testing\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Keisuke Shima 2   2. Piotr Zyskowski 1   3. Adam Dąbrowski 1    "},{"id":24,"href":"/packages/avp_web_interface/","title":"avp_web_interface","parent":"Contents","content":"avp_web_interface\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/avp_web_interface/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/avp_web_interface\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 2   2. Igor Bogoslavskyi 1   3. mitsudome-r 1    "},{"id":25,"href":"/packages/behavior_planner/","title":"behavior_planner","parent":"Contents","content":"behavior_planner\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. mitsudome-r 3   2. Maxime CLEMENT 2   3. Esteve Fernandez 2    "},{"id":26,"href":"/packages/behavior_planner_nodes/","title":"behavior_planner_nodes","parent":"Contents","content":"behavior_planner_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/behavior_planner_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/behavior_planner_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 3   2. Esteve Fernandez 3   3. mitsudome-r 2    "},{"id":27,"href":"/categories/","title":"Categories","parent":"Code quality dashboard","content":""},{"id":28,"href":"/packages/cluster_projection_node/","title":"cluster_projection_node","parent":"Contents","content":"cluster_projection_node\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/cluster_projection_node/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/cluster_projection_node\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Çalışkan 3   2. Maxime CLEMENT 1   3. Esteve Fernandez 1    "},{"id":29,"href":"/","title":"Code quality dashboard","parent":"","content":"Last updated: 2022-01-30 20:59:20 UTC\nLegend Code coverage N/A low: \u0026lt; 75.0 % medium: \u0026gt;= 75.0 % high: \u0026gt;= 90.0 %\nCode metrics   CCN (Cyclomatic Complexity Number)\nlow: \u0026lt; 5 medium: \u0026gt;= 5 high: \u0026gt;= 20\n  LOC (Lines of Code)\nlow: \u0026lt; 1000 medium: \u0026gt;= 1000 high: \u0026gt;= 200\n  Parameter count\nlow: \u0026lt; 50 medium: \u0026gt;= 50 high: \u0026gt;= 6\n     Coverage Metrics  CCN LOC Parameter   Package name  Line [%]  Functions [%]  Branches [%] Over recommended value Over required value Worst value Over recommended value Over required value Worst value Over recommended value Over required value Worst value    apollo_lidar_segmentation 0.0 0.0 0.0 5 1 24 0 0 87 0 3 10  apollo_lidar_segmentation_nodes 0.0 0.0 0.0 0 0 3 0 0 42 0 0 1  astar_search 96.5 94.1 61.0 4 0 9 0 0 47 0 0 5  autoware_auto_algorithm 100.0 100.0 73.3 0 0 5 0 0 24 0 0 3  autoware_auto_cmake 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_common 100.0 100.0 73.7 33 4 205 1 1 1088 0 1 7  autoware_auto_control_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_create_pkg 0.0 0.0 0.0 1 0 9 0 0 48 0 0 5  autoware_auto_debug_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_examples 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_geometry 98.2 99.3 65.0 9 0 10 0 0 57 0 2 8  autoware_auto_geometry_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_launch 0.0 0.0 0.0 0 0 1 0 0 168 0 0 0  autoware_auto_mapping_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_perception_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_planning_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_system_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_auto_tf2 97.7 100.0 55.9 0 0 2 0 0 14 0 0 3  autoware_auto_vehicle_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  autoware_demos 0.0 0.0 0.0 0 0 1 0 2 297 0 0 2  autoware_rviz_plugins 0.0 0.0 0.0 2 0 7 0 0 45 0 0 4  autoware_state_monitor 95.6 100.0 57.3 2 1 24 0 0 86 0 0 3  autoware_testing 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  avp_web_interface 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  behavior_planner 0.0 0.0 0.0 3 0 11 0 0 77 0 0 4  behavior_planner_nodes 0.0 0.0 0.0 2 0 11 0 0 100 0 0 2  cluster_projection_node 0.0 0.0 0.0 0 0 4 0 0 34 0 0 1  controller_common 92.7 89.3 67.2 0 0 4 0 0 29 0 0 4  controller_common_nodes 79.7 85.0 22.4 2 0 10 0 0 56 0 1 8  controller_testing 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  costmap_generator 95.1 100.0 51.4 0 0 4 0 0 42 0 1 8  costmap_generator_nodes 88.5 88.2 31.0 0 0 5 0 0 48 0 0 4  covariance_insertion 100.0 100.0 0.0 0 0 5 0 0 19 0 0 3  covariance_insertion_nodes 73.2 31.7 40.7 1 0 10 0 0 26 0 0 1  detection_2d_visualizer 0.0 0.0 0.0 0 0 4 0 0 23 0 0 4  emergency_handler 95.5 100.0 52.3 2 0 14 0 0 61 0 0 3  euclidean_cluster 72.0 77.4 46.2 1 0 7 0 0 33 0 0 6  euclidean_cluster_nodes 30.7 22.2 33.8 2 0 7 0 0 76 0 0 2  fake_test_node 85.5 100.0 28.9 0 0 0 0 0 0 0 0 0  filter_node_base 0.0 0.0 0.0 0 0 2 0 0 18 0 0 3  freespace_planner 78.1 87.0 23.2 1 0 6 0 0 89 0 0 3  gnss_conversion_nodes 100.0 100.0 43.8 0 0 4 0 0 41 0 0 3  grid_map 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  grid_map_cmake_helpers 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  grid_map_core 78.1 73.9 53.0 16 0 15 0 0 134 0 3 12  grid_map_costmap_2d 87.5 72.2 68.1 0 0 5 0 0 35 0 0 0  grid_map_cv 52.2 39.1 18.3 4 0 18 0 0 58 0 0 6  grid_map_demos 0.0 0.0 0.0 6 0 12 0 0 97 0 1 7  grid_map_filters 0.0 0.0 0.0 32 10 99 0 2 614 0 2 7  grid_map_loader 0.0 0.0 0.0 0 0 3 0 0 14 0 0 2  grid_map_msgs 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  grid_map_octomap 82.7 25.0 51.7 1 0 14 0 0 70 0 0 5  grid_map_pcl 65.6 69.0 25.0 2 0 7 0 0 48 0 0 4  grid_map_ros 49.5 57.1 11.9 7 0 17 0 0 85 0 0 6  grid_map_rviz_plugin 0.0 0.0 0.0 3 1 38 0 0 152 0 1 16  grid_map_sdf 99.4 92.3 77.6 2 0 14 0 0 46 0 0 3  grid_map_visualization 0.0 0.0 0.0 5 0 8 0 0 63 0 1 7  ground_truth_detections 98.1 100.0 52.4 0 0 4 0 0 20 0 0 1  had_map_utils 57.6 62.8 27.8 7 0 18 0 0 74 0 3 9  hungarian_assigner 94.8 24.0 65.7 6 0 14 0 0 59 0 0 3  joystick_vehicle_interface 57.9 78.6 49.3 2 1 22 0 0 73 0 0 4  joystick_vehicle_interface_nodes 95.7 100.0 49.7 1 0 6 0 0 96 0 0 2  lane_planner 100.0 100.0 62.1 1 0 10 0 0 60 0 0 3  lane_planner_nodes 100.0 100.0 50.0 0 0 1 0 0 25 0 0 2  lanelet2_global_planner 86.6 89.5 40.5 4 1 22 0 0 64 0 0 4  lanelet2_global_planner_nodes 0.0 0.0 0.0 0 0 5 0 0 29 0 0 4  lanelet2_map_provider 7.7 18.2 25.0 2 0 9 0 0 71 0 0 4  launch 0.0 0.0 0.0 45 2 28 0 0 161 0 14 12  launch_testing 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  launch_testing_ament_cmake 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  launch_xml 0.0 0.0 0.0 0 0 4 0 0 19 0 1 7  launch_yaml 0.0 0.0 0.0 1 0 6 0 0 27 0 1 7  lexus_rx_450h_description 0.0 0.0 0.0 0 0 1 0 0 15 0 0 0  lgsvl_interface 36.3 39.1 19.6 3 1 26 0 0 151 0 1 13  lidar_integration 76.1 75.0 27.5 8 2 25 0 0 150 0 3 8  lidar_utils 80.9 92.1 53.0 2 0 12 0 0 39 0 0 2  localization_common 60.9 60.0 32.1 1 0 6 0 0 23 0 0 4  localization_nodes 39.3 60.0 12.1 0 0 5 0 0 42 0 1 8  localization_system_tests 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  lonely_world_prediction 87.8 93.3 37.3 0 0 5 0 0 27 0 0 2  measurement_conversion 88.6 89.5 49.7 0 0 4 0 0 22 0 0 5  motion_common 83.4 78.9 54.6 2 0 10 0 0 48 0 3 9  motion_model 95.7 50.0 54.6 0 0 2 0 0 65 0 0 2  motion_model_testing_simulator 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  motion_testing 82.5 71.4 41.9 0 0 0 0 0 0 0 0 0  motion_testing_nodes 95.7 100.0 56.5 0 0 0 0 0 0 0 0 0  mpark_variant_vendor 0.0 0.0 0.0 11 2 33 0 0 43 0 0 2  mpc_controller 71.3 90.5 45.5 2 0 12 0 0 61 0 1 7  mpc_controller_nodes 5.9 25.0 0.2 0 0 5 0 0 134 0 1 9  ndt 88.3 93.1 46.2 4 1 21 0 0 81 0 0 4  ndt_mapping_nodes 39.6 31.2 27.4 1 0 8 0 0 71 0 0 2  ndt_nodes 62.3 50.0 39.2 0 0 5 0 0 50 0 0 3  ne_raptor_interface 65.7 67.9 26.1 8 0 18 0 0 86 0 1 11  neural_networks 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  object_collision_estimator 99.1 100.0 82.0 1 0 7 0 0 44 0 0 5  object_collision_estimator_nodes 82.5 90.0 31.8 0 0 5 0 0 82 0 0 2  off_map_obstacles_filter 0.0 0.0 0.0 1 0 11 0 0 52 0 0 4  off_map_obstacles_filter_nodes 0.0 0.0 0.0 0 0 5 0 0 31 0 0 1  optimization 93.7 97.8 59.2 5 0 13 0 0 80 0 0 6  osqp_interface 100.0 100.0 58.5 0 0 5 0 0 34 0 0 6  outlier_filter 100.0 100.0 57.1 0 0 4 0 0 22 0 0 4  outlier_filter_nodes 0.0 0.0 0.0 0 0 5 0 0 36 0 0 2  point_cloud_filter_transform_nodes 97.3 100.0 45.8 1 0 10 0 0 79 0 1 9  point_cloud_fusion 96.0 100.0 64.3 0 0 3 0 0 22 0 0 3  point_cloud_fusion_nodes 83.9 100.0 23.7 1 0 8 0 0 44 0 1 8  point_cloud_mapping 91.5 85.7 69.0 1 0 7 0 0 29 0 0 3  point_type_adapter 70.3 90.9 26.6 1 0 9 0 0 56 0 0 1  polygon_remover 50.6 69.2 22.7 0 0 4 0 0 48 0 0 2  polygon_remover_nodes 57.6 80.0 26.0 1 0 7 0 0 75 0 0 1  prediction_nodes 100.0 100.0 50.0 0 0 1 0 0 15 0 0 1  pure_pursuit 90.3 95.0 69.8 5 0 7 0 0 60 0 1 8  pure_pursuit_nodes 0.0 0.0 0.0 0 0 4 0 0 23 0 0 3  ray_ground_classifier 94.3 95.8 75.0 4 0 12 0 0 56 0 1 8  ray_ground_classifier_nodes 60.8 100.0 23.5 1 1 26 0 0 128 0 0 1  recordreplay_planner 93.5 96.2 54.1 1 0 19 0 0 49 0 0 3  recordreplay_planner_nodes 25.9 23.8 17.3 1 0 7 0 0 59 0 0 4  reference_tracking_controller 0.0 0.0 0.0 0 0 1 0 0 4 0 0 2  ros2test 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  ros_testing 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  scenario_simulator_launch 0.0 0.0 0.0 2 0 6 0 0 118 0 0 3  signal_filters 93.9 91.0 66.7 0 0 4 0 0 18 0 0 2  simple_planning_simulator 92.6 90.0 44.5 5 0 8 0 0 54 0 2 10  spinnaker_camera_driver 0.0 0.0 0.0 4 0 14 0 0 57 0 1 7  spinnaker_camera_nodes 0.0 0.0 0.0 0 0 4 0 0 47 0 0 3  ssc_interface 14.1 9.5 2.4 3 0 13 0 0 58 0 0 6  state_estimation 96.6 74.4 47.8 0 0 4 0 0 24 0 0 4  state_estimation_nodes 0.0 0.0 0.0 2 0 7 0 0 50 0 1 7  state_vector 96.4 18.0 21.4 0 0 2 0 0 13 0 0 2  test_launch_testing 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  test_trajectory_following 0.0 0.0 0.0 0 0 0 0 0 0 0 0 0  time_utils 97.4 100.0 54.5 0 0 4 0 0 34 0 0 3  tracking 84.5 87.8 45.3 4 0 9 0 0 61 0 0 4  tracking_nodes 0.0 0.0 0.0 3 0 10 0 0 65 0 0 2  tracking_test_framework 94.5 91.5 57.0 0 0 0 0 0 0 0 0 0  trajectory_follower 92.3 87.8 38.4 20 0 17 0 0 95 0 8 11  trajectory_follower_nodes 76.2 79.0 33.4 7 0 20 0 0 126 0 0 3  trajectory_planner_node_base 70.0 83.3 18.2 0 0 3 0 0 27 0 0 3  trajectory_smoother 100.0 100.0 90.9 1 0 8 0 0 30 0 0 1  trajectory_spoofer 71.6 69.2 45.9 0 0 5 0 0 40 0 0 6  tvm_utility 0.0 0.0 0.0 0 0 5 0 0 53 0 0 6  vehicle_constants_manager 68.9 75.0 28.9 0 0 5 0 0 72 0 1 15  vehicle_interface 77.5 70.8 32.9 13 1 25 0 0 121 0 2 10  velodyne_driver 96.7 91.4 80.8 0 0 5 0 0 32 0 0 4  velodyne_nodes 81.4 39.1 35.7 2 0 8 0 0 52 0 0 2  voxel_grid 100.0 86.7 71.1 0 0 5 0 0 35 0 0 4  voxel_grid_nodes 87.7 92.3 45.2 0 0 5 0 0 45 0 0 2  xsens_driver 41.3 53.1 14.4 6 1 44 0 0 115 0 0 4     Test result for all packages Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.   Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.   Clang-Tidy  You can access the Clang-Tidy results here.   Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/all/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/all\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1.  KeisukeShima 18   2.      3.       "},{"id":30,"href":"/packages/","title":"Contents","parent":"Code quality dashboard","content":"Contents\n   apollo_lidar_segmentation: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     apollo_lidar_segmentation_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     astar_search: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_algorithm: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_cmake: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_control_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_create_pkg: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_debug_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_examples: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_geometry: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_geometry_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_launch: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_mapping_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_perception_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_planning_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_system_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_tf2: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_auto_vehicle_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_demos: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_rviz_plugins: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_state_monitor: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     autoware_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     avp_web_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     behavior_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     behavior_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     cluster_projection_node: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     controller_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     controller_common_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     controller_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     costmap_generator: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     costmap_generator_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     covariance_insertion: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     covariance_insertion_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     detection_2d_visualizer: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     emergency_handler: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     euclidean_cluster: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     euclidean_cluster_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     fake_test_node: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     filter_node_base: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     freespace_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     gnss_conversion_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_cmake_helpers: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_core: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_costmap_2d: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_cv: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_demos: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_filters: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_loader: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_msgs: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_octomap: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_pcl: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_ros: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_rviz_plugin: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_sdf: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     grid_map_visualization: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ground_truth_detections: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     had_map_utils: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     hungarian_assigner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     joystick_vehicle_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     joystick_vehicle_interface_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lane_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lane_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lanelet2_global_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lanelet2_global_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lanelet2_map_provider: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     launch: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     launch_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     launch_testing_ament_cmake: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     launch_xml: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     launch_yaml: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lexus_rx_450h_description: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lgsvl_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lidar_integration: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lidar_utils: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     localization_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     localization_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     localization_system_tests: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     lonely_world_prediction: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     measurement_conversion: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_common: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_model: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_model_testing_simulator: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     motion_testing_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     mpark_variant_vendor: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     mpc_controller: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     mpc_controller_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ndt: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ndt_mapping_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ndt_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ne_raptor_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     neural_networks: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     object_collision_estimator: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     object_collision_estimator_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     off_map_obstacles_filter: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     off_map_obstacles_filter_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     optimization: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     osqp_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     outlier_filter: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     outlier_filter_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_filter_transform_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_fusion: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_fusion_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_cloud_mapping: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     point_type_adapter: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     polygon_remover: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     polygon_remover_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     prediction_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     pure_pursuit: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     pure_pursuit_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ray_ground_classifier: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ray_ground_classifier_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     recordreplay_planner: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     recordreplay_planner_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     reference_tracking_controller: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ros2test: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ros_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     scenario_simulator_launch: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     signal_filters: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     simple_planning_simulator: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     spinnaker_camera_driver: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     spinnaker_camera_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     ssc_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     state_estimation: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     state_estimation_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     state_vector: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     test_launch_testing: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     test_trajectory_following: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     time_utils: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tracking: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tracking_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tracking_test_framework: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_follower: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_follower_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_planner_node_base: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_smoother: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     trajectory_spoofer: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     tvm_utility: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     vehicle_constants_manager: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     vehicle_interface: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     velodyne_driver: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     velodyne_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     voxel_grid: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     voxel_grid_nodes: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     xsens_driver: Metrics reporter is a tool for continuously monitoring various software metrics. For more information, please visit https://github.com/tier4/ros-metrics-reporter .     "},{"id":31,"href":"/packages/controller_common/","title":"controller_common","parent":"Contents","content":"controller_common\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 3   2. Maxime CLEMENT 2   3. Esteve Fernandez 2    "},{"id":32,"href":"/packages/controller_common_nodes/","title":"controller_common_nodes","parent":"Contents","content":"controller_common_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_common_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_common_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 3   2. Esteve Fernandez 2   3. Igor Bogoslavskyi 2    "},{"id":33,"href":"/packages/controller_testing/","title":"controller_testing","parent":"Contents","content":"controller_testing\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/controller_testing/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/controller_testing\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 2   2. Jilada Eccleston 2   3. Maxime CLEMENT 1    "},{"id":34,"href":"/packages/costmap_generator/","title":"costmap_generator","parent":"Contents","content":"costmap_generator\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daniel Marczak 1   2.     3.      "},{"id":35,"href":"/packages/costmap_generator_nodes/","title":"costmap_generator_nodes","parent":"Contents","content":"costmap_generator_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/costmap_generator_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/costmap_generator_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daniel Marczak 1   2.     3.      "},{"id":36,"href":"/packages/covariance_insertion/","title":"covariance_insertion","parent":"Contents","content":"covariance_insertion\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 2   2. Igor Bogoslavskyi 1   3. Ambroise Vincent 1    "},{"id":37,"href":"/packages/covariance_insertion_nodes/","title":"covariance_insertion_nodes","parent":"Contents","content":"covariance_insertion_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/covariance_insertion_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/covariance_insertion_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yuki Hara 1   2. MIURA Yasuyuki 1   3. Igor Bogoslavskyi 1    "},{"id":38,"href":"/packages/detection_2d_visualizer/","title":"detection_2d_visualizer","parent":"Contents","content":"detection_2d_visualizer\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/detection_2d_visualizer/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/detection_2d_visualizer\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Çalışkan 2   2. Esteve Fernandez 1   3. Gowtham Ranganathan 1    "},{"id":39,"href":"/packages/emergency_handler/","title":"emergency_handler","parent":"Contents","content":"emergency_handler\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/emergency_handler/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/emergency_handler\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Luca Foschiani 1   2. Esteve Fernandez 1   3. Michał Drwięga 1    "},{"id":40,"href":"/packages/euclidean_cluster/","title":"euclidean_cluster","parent":"Contents","content":"euclidean_cluster\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 6   2. MIURA Yasuyuki 5   3. Joshua Whitley 4    "},{"id":41,"href":"/packages/euclidean_cluster_nodes/","title":"euclidean_cluster_nodes","parent":"Contents","content":"euclidean_cluster_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/euclidean_cluster_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/euclidean_cluster_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 25   2. MIURA Yasuyuki 7   3. Joshua Whitley 6    "},{"id":42,"href":"/packages/fake_test_node/","title":"fake_test_node","parent":"Contents","content":"fake_test_node\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/fake_test_node/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/fake_test_node\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 2   2. Igor Bogoslavskyi 2   3. Jilada Eccleston 1    "},{"id":43,"href":"/packages/filter_node_base/","title":"filter_node_base","parent":"Contents","content":"filter_node_base\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/filter_node_base/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/filter_node_base\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jilada Eccleston 3   2. Yuki Hara 1   3. Esteve Fernandez 1    "},{"id":44,"href":"/packages/freespace_planner/","title":"freespace_planner","parent":"Contents","content":"freespace_planner\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/freespace_planner/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/freespace_planner\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daniel Marczak 1   2.     3.      "},{"id":45,"href":"/packages/gnss_conversion_nodes/","title":"gnss_conversion_nodes","parent":"Contents","content":"gnss_conversion_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/gnss_conversion_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/gnss_conversion_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 4   2. Esteve Fernandez 2   3. Frederik Beaujean 1    "},{"id":46,"href":"/packages/grid_map/","title":"grid_map","parent":"Contents","content":"grid_map\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 95   2. martiwer 31   3. Marwan Taher 4    "},{"id":47,"href":"/packages/grid_map_cmake_helpers/","title":"grid_map_cmake_helpers","parent":"Contents","content":"grid_map_cmake_helpers\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cmake_helpers/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cmake_helpers\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Marwan Taher 2   2.     3.      "},{"id":48,"href":"/packages/grid_map_core/","title":"grid_map_core","parent":"Contents","content":"grid_map_core\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_core/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_core\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 140   2. martiwer 23   3. Péter Fankhauser 5    "},{"id":49,"href":"/packages/grid_map_costmap_2d/","title":"grid_map_costmap_2d","parent":"Contents","content":"grid_map_costmap_2d\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_costmap_2d/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_costmap_2d\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 11   2. Marco Sütterlin 6   3. Remo Diethelm 3    "},{"id":50,"href":"/packages/grid_map_cv/","title":"grid_map_cv","parent":"Contents","content":"grid_map_cv\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_cv/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_cv\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 43   2. Marwan Taher 3   3. Samuel Bachmann 3    "},{"id":51,"href":"/packages/grid_map_demos/","title":"grid_map_demos","parent":"Contents","content":"grid_map_demos\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_demos/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_demos\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 111   2. martiwer 19   3. Perry Franklin 6    "},{"id":52,"href":"/packages/grid_map_filters/","title":"grid_map_filters","parent":"Contents","content":"grid_map_filters\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_filters/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_filters\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 74   2. martiwer 13   3. Tanja Baumann 4    "},{"id":53,"href":"/packages/grid_map_loader/","title":"grid_map_loader","parent":"Contents","content":"grid_map_loader\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_loader/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_loader\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 45   2. Samuel Bachmann 3   3. Marwan Taher 2    "},{"id":54,"href":"/packages/grid_map_msgs/","title":"grid_map_msgs","parent":"Contents","content":"grid_map_msgs\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_msgs/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_msgs\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 45   2. Marwan Taher 8   3. Samuel Bachmann 3    "},{"id":55,"href":"/packages/grid_map_octomap/","title":"grid_map_octomap","parent":"Contents","content":"grid_map_octomap\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_octomap/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_octomap\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 12   2. Jeff Delmerico 4   3. Samuel Bachmann 3    "},{"id":56,"href":"/packages/grid_map_pcl/","title":"grid_map_pcl","parent":"Contents","content":"grid_map_pcl\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_pcl/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_pcl\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 17   2. Alex Millane 4   3. Samuel Bachmann 3    "},{"id":57,"href":"/packages/grid_map_ros/","title":"grid_map_ros","parent":"Contents","content":"grid_map_ros\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_ros/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_ros\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 56   2. Marwan Taher 4   3. Daniel Stonier 4    "},{"id":58,"href":"/packages/grid_map_rviz_plugin/","title":"grid_map_rviz_plugin","parent":"Contents","content":"grid_map_rviz_plugin\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_rviz_plugin/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_rviz_plugin\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 35   2. Samuel Bachmann 3   3. Perry Franklin 3    "},{"id":59,"href":"/packages/grid_map_sdf/","title":"grid_map_sdf","parent":"Contents","content":"grid_map_sdf\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_sdf/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_sdf\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 12   2. Takahiro Miki 10   3. Samuel Bachmann 4    "},{"id":60,"href":"/packages/grid_map_visualization/","title":"grid_map_visualization","parent":"Contents","content":"grid_map_visualization\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/grid_map_visualization/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/grid_map_visualization\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Peter Fankhauser 74   2. Marwan Taher 4   3. Péter Fankhauser 4    "},{"id":61,"href":"/packages/ground_truth_detections/","title":"ground_truth_detections","parent":"Contents","content":"ground_truth_detections\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ground_truth_detections/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ground_truth_detections\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 4   2. Frederik Beaujean 3   3. Gowtham Ranganathan 2    "},{"id":62,"href":"/packages/had_map_utils/","title":"had_map_utils","parent":"Contents","content":"had_map_utils\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/had_map_utils/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/had_map_utils\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 3   2. Esteve Fernandez 2   3. Frederik Beaujean 2    "},{"id":63,"href":"/packages/hungarian_assigner/","title":"hungarian_assigner","parent":"Contents","content":"hungarian_assigner\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/hungarian_assigner/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/hungarian_assigner\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. MIURA Yasuyuki 4   2. Esteve Fernandez 4   3. Joshua Whitley 3    "},{"id":64,"href":"/packages/joystick_vehicle_interface/","title":"joystick_vehicle_interface","parent":"Contents","content":"joystick_vehicle_interface\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 6   2. MIURA Yasuyuki 5   3. Esteve Fernandez 4    "},{"id":65,"href":"/packages/joystick_vehicle_interface_nodes/","title":"joystick_vehicle_interface_nodes","parent":"Contents","content":"joystick_vehicle_interface_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/joystick_vehicle_interface_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/joystick_vehicle_interface_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 4   2. Joshua Whitley 3   3. MIURA Yasuyuki 1    "},{"id":66,"href":"/packages/lane_planner/","title":"lane_planner","parent":"Contents","content":"lane_planner\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 2   2. Esteve Fernandez 2   3. Joshua Whitley 2    "},{"id":67,"href":"/packages/lane_planner_nodes/","title":"lane_planner_nodes","parent":"Contents","content":"lane_planner_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lane_planner_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lane_planner_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 2   2. Jilada Eccleston 2   3. Maxime CLEMENT 1    "},{"id":68,"href":"/packages/lanelet2_global_planner/","title":"lanelet2_global_planner","parent":"Contents","content":"lanelet2_global_planner\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 2   2. mitsudome-r 2   3. Maxime CLEMENT 1    "},{"id":69,"href":"/packages/lanelet2_global_planner_nodes/","title":"lanelet2_global_planner_nodes","parent":"Contents","content":"lanelet2_global_planner_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_global_planner_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_global_planner_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 3   2. Maxime CLEMENT 2   3. Jilada Eccleston 2    "},{"id":70,"href":"/packages/lanelet2_map_provider/","title":"lanelet2_map_provider","parent":"Contents","content":"lanelet2_map_provider\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lanelet2_map_provider/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lanelet2_map_provider\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 6   2. Nikolai Morin 4   3. simon-t4 3    "},{"id":71,"href":"/packages/launch/","title":"launch","parent":"Contents","content":"launch\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Dirk Thomas 58   2. William Woodall 44   3. ivanpauno 24    "},{"id":72,"href":"/packages/launch_testing/","title":"launch_testing","parent":"Contents","content":"launch_testing\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Dirk Thomas 24   2. William Woodall 18   3. Michel Hidalgo 17    "},{"id":73,"href":"/packages/launch_testing_ament_cmake/","title":"launch_testing_ament_cmake","parent":"Contents","content":"launch_testing_ament_cmake\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_testing_ament_cmake/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_testing_ament_cmake\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jacob Perron 7   2. Michel Hidalgo 5   3. Chris Lalancette 4    "},{"id":74,"href":"/packages/launch_xml/","title":"launch_xml","parent":"Contents","content":"launch_xml\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_xml/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_xml\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jacob Perron 5   2. Chris Lalancette 5   3. ivanpauno 5    "},{"id":75,"href":"/packages/launch_yaml/","title":"launch_yaml","parent":"Contents","content":"launch_yaml\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/launch_yaml/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/launch_yaml\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jacob Perron 5   2. Chris Lalancette 5   3. Dirk Thomas 4    "},{"id":76,"href":"/packages/lexus_rx_450h_description/","title":"lexus_rx_450h_description","parent":"Contents","content":"lexus_rx_450h_description\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lexus_rx_450h_description/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lexus_rx_450h_description\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 9   2. Igor Bogoslavskyi 3   3. Gowtham Ranganathan 1    "},{"id":77,"href":"/packages/lgsvl_interface/","title":"lgsvl_interface","parent":"Contents","content":"lgsvl_interface\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lgsvl_interface/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lgsvl_interface\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 16   2. Jit Ray Chowdhury 12   3. Esteve Fernandez 11    "},{"id":78,"href":"/packages/lidar_integration/","title":"lidar_integration","parent":"Contents","content":"lidar_integration\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_integration/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_integration\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 7   2. MIURA Yasuyuki 3   3. Frederik Beaujean 2    "},{"id":79,"href":"/packages/lidar_utils/","title":"lidar_utils","parent":"Contents","content":"lidar_utils\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lidar_utils/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lidar_utils\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 22   2. Joshua Whitley 6   3. Igor Bogoslavskyi 4    "},{"id":80,"href":"/packages/localization_common/","title":"localization_common","parent":"Contents","content":"localization_common\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_common/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_common\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Caliskan 10   2. Joshua Whitley 6   3. Esteve Fernandez 3    "},{"id":81,"href":"/packages/localization_nodes/","title":"localization_nodes","parent":"Contents","content":"localization_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Caliskan 12   2. Yunus Emre Çalışkan 6   3. Joshua Whitley 5    "},{"id":82,"href":"/packages/localization_system_tests/","title":"localization_system_tests","parent":"Contents","content":"localization_system_tests\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/localization_system_tests/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/localization_system_tests\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 2   2. M. Fatih Cırıt 1   3. Igor Bogoslavskyi 1    "},{"id":83,"href":"/packages/lonely_world_prediction/","title":"lonely_world_prediction","parent":"Contents","content":"lonely_world_prediction\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/lonely_world_prediction/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/lonely_world_prediction\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 1   2. Frederik Beaujean 1   3.      "},{"id":84,"href":"/packages/measurement_conversion/","title":"measurement_conversion","parent":"Contents","content":"measurement_conversion\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/measurement_conversion/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/measurement_conversion\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 3   2. Nikolai Morin 3   3. Esteve Fernandez 2    "},{"id":85,"href":"/packages/motion_common/","title":"motion_common","parent":"Contents","content":"motion_common\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_common/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_common\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 3   2. Joshua Whitley 3   3. Esteve Fernandez 2    "},{"id":86,"href":"/packages/motion_model/","title":"motion_model","parent":"Contents","content":"motion_model\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 7   2. Nikolai Morin 2   3. Joshua Whitley 2    "},{"id":87,"href":"/packages/motion_model_testing_simulator/","title":"motion_model_testing_simulator","parent":"Contents","content":"motion_model_testing_simulator\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_model_testing_simulator/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_model_testing_simulator\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 1   2. mitsudome-r 1   3.      "},{"id":88,"href":"/packages/motion_testing/","title":"motion_testing","parent":"Contents","content":"motion_testing\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 2   2. Esteve Fernandez 2   3. Joshua Whitley 2    "},{"id":89,"href":"/packages/motion_testing_nodes/","title":"motion_testing_nodes","parent":"Contents","content":"motion_testing_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/motion_testing_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/motion_testing_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 2   2. Joshua Whitley 2   3. Maxime CLEMENT 1    "},{"id":90,"href":"/packages/mpark_variant_vendor/","title":"mpark_variant_vendor","parent":"Contents","content":"mpark_variant_vendor\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpark_variant_vendor/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpark_variant_vendor\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 2   2. Joshua Whitley 2   3.      "},{"id":91,"href":"/packages/mpc_controller/","title":"mpc_controller","parent":"Contents","content":"mpc_controller\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 3   2. Joshua Whitley 3   3. Esteve Fernandez 2    "},{"id":92,"href":"/packages/mpc_controller_nodes/","title":"mpc_controller_nodes","parent":"Contents","content":"mpc_controller_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/mpc_controller_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/mpc_controller_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 2   2. Piotr Zyskowski 1   3. MIURA Yasuyuki 1    "},{"id":93,"href":"/packages/ndt/","title":"ndt","parent":"Contents","content":"ndt\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Caliskan 34   2. Esteve Fernandez 11   3. Joshua Whitley 8    "},{"id":94,"href":"/packages/ndt_mapping_nodes/","title":"ndt_mapping_nodes","parent":"Contents","content":"ndt_mapping_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_mapping_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_mapping_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 3   2. Yunus Emre Çalışkan 3   3. Joshua Whitley 3    "},{"id":95,"href":"/packages/ndt_nodes/","title":"ndt_nodes","parent":"Contents","content":"ndt_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ndt_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ndt_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Caliskan 14   2. Joshua Whitley 9   3. Esteve Fernandez 7    "},{"id":96,"href":"/packages/ne_raptor_interface/","title":"ne_raptor_interface","parent":"Contents","content":"ne_raptor_interface\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ne_raptor_interface/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ne_raptor_interface\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 6   2. Joshua Whitley 4   3. New Eagle 4    "},{"id":97,"href":"/packages/neural_networks/","title":"neural_networks","parent":"Contents","content":"neural_networks\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/neural_networks/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/neural_networks\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Ambroise Vincent 1   2.     3.      "},{"id":98,"href":"/packages/object_collision_estimator/","title":"object_collision_estimator","parent":"Contents","content":"object_collision_estimator\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Ambroise Vincent 2   2. Maxime CLEMENT 1   3. Esteve Fernandez 1    "},{"id":99,"href":"/packages/object_collision_estimator_nodes/","title":"object_collision_estimator_nodes","parent":"Contents","content":"object_collision_estimator_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/object_collision_estimator_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/object_collision_estimator_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jilada Eccleston 3   2. Esteve Fernandez 2   3. Joshua Whitley 2    "},{"id":100,"href":"/packages/off_map_obstacles_filter/","title":"off_map_obstacles_filter","parent":"Contents","content":"off_map_obstacles_filter\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 3   2. Joshua Whitley 2   3. Yuki Hara 1    "},{"id":101,"href":"/packages/off_map_obstacles_filter_nodes/","title":"off_map_obstacles_filter_nodes","parent":"Contents","content":"off_map_obstacles_filter_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/off_map_obstacles_filter_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/off_map_obstacles_filter_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 1   2. Maxime CLEMENT 1   3. MIURA Yasuyuki 1    "},{"id":102,"href":"/packages/optimization/","title":"optimization","parent":"Contents","content":"optimization\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/optimization/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/optimization\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 6   2. Yunus Emre Caliskan 6   3. Joshua Whitley 5    "},{"id":103,"href":"/packages/osqp_interface/","title":"osqp_interface","parent":"Contents","content":"osqp_interface\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/osqp_interface/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/osqp_interface\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. MIURA Yasuyuki 1   2. Maxime CLEMENT 1   3.      "},{"id":104,"href":"/packages/outlier_filter/","title":"outlier_filter","parent":"Contents","content":"outlier_filter\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jilada Eccleston 2   2. Esteve Fernandez 1   3. MIURA Yasuyuki 1    "},{"id":105,"href":"/packages/outlier_filter_nodes/","title":"outlier_filter_nodes","parent":"Contents","content":"outlier_filter_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/outlier_filter_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/outlier_filter_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yuki Hara 1   2. Chris Battista 1   3. Jilada Eccleston 1    "},{"id":106,"href":"/packages/point_cloud_filter_transform_nodes/","title":"point_cloud_filter_transform_nodes","parent":"Contents","content":"point_cloud_filter_transform_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_filter_transform_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_filter_transform_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 18   2. MIURA Yasuyuki 9   3. Joshua Whitley 9    "},{"id":107,"href":"/packages/point_cloud_fusion/","title":"point_cloud_fusion","parent":"Contents","content":"point_cloud_fusion\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 14   2. MIURA Yasuyuki 6   3. Joshua Whitley 4    "},{"id":108,"href":"/packages/point_cloud_fusion_nodes/","title":"point_cloud_fusion_nodes","parent":"Contents","content":"point_cloud_fusion_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_fusion_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_fusion_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 2   2. Jilada Eccleston 2   3. MIURA Yasuyuki 1    "},{"id":109,"href":"/packages/point_cloud_mapping/","title":"point_cloud_mapping","parent":"Contents","content":"point_cloud_mapping\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_cloud_mapping/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_cloud_mapping\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Caliskan 7   2. Joshua Whitley 6   3. Esteve Fernandez 2    "},{"id":110,"href":"/packages/point_type_adapter/","title":"point_type_adapter","parent":"Contents","content":"point_type_adapter\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/point_type_adapter/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/point_type_adapter\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. MIURA Yasuyuki 1   2. M. Fatih Cırıt 1   3.      "},{"id":111,"href":"/packages/polygon_remover/","title":"polygon_remover","parent":"Contents","content":"polygon_remover\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. MIURA Yasuyuki 1   2. Jilada Eccleston 1   3. M. Fatih Cırıt 1    "},{"id":112,"href":"/packages/polygon_remover_nodes/","title":"polygon_remover_nodes","parent":"Contents","content":"polygon_remover_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/polygon_remover_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/polygon_remover_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. MIURA Yasuyuki 1   2. Jilada Eccleston 1   3. M. Fatih Cırıt 1    "},{"id":113,"href":"/packages/prediction_nodes/","title":"prediction_nodes","parent":"Contents","content":"prediction_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/prediction_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/prediction_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 1   2. Frederik Beaujean 1   3.      "},{"id":114,"href":"/packages/pure_pursuit/","title":"pure_pursuit","parent":"Contents","content":"pure_pursuit\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 2   2. Yuki Hara 1   3. Maxime CLEMENT 1    "},{"id":115,"href":"/packages/pure_pursuit_nodes/","title":"pure_pursuit_nodes","parent":"Contents","content":"pure_pursuit_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/pure_pursuit_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/pure_pursuit_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 2   2. Joshua Whitley 2   3. Maxime CLEMENT 1    "},{"id":116,"href":"/packages/ray_ground_classifier/","title":"ray_ground_classifier","parent":"Contents","content":"ray_ground_classifier\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 10   2. MIURA Yasuyuki 5   3. Joshua Whitley 5    "},{"id":117,"href":"/packages/ray_ground_classifier_nodes/","title":"ray_ground_classifier_nodes","parent":"Contents","content":"ray_ground_classifier_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ray_ground_classifier_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ray_ground_classifier_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 38   2. MIURA Yasuyuki 8   3. Joshua Whitley 7    "},{"id":118,"href":"/packages/recordreplay_planner/","title":"recordreplay_planner","parent":"Contents","content":"recordreplay_planner\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 2   2. mitsudome-r 2   3. Maxime CLEMENT 1    "},{"id":119,"href":"/packages/recordreplay_planner_nodes/","title":"recordreplay_planner_nodes","parent":"Contents","content":"recordreplay_planner_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/recordreplay_planner_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/recordreplay_planner_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 4   2. Esteve Fernandez 2   3. Jilada Eccleston 2    "},{"id":120,"href":"/packages/reference_tracking_controller/","title":"reference_tracking_controller","parent":"Contents","content":"reference_tracking_controller\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/reference_tracking_controller/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/reference_tracking_controller\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 4   2. Frederik Beaujean 1   3. Nikolai Morin 1    "},{"id":121,"href":"/packages/ros2test/","title":"ros2test","parent":"Contents","content":"ros2test\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros2test/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros2test\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Dirk Thomas 3   2. Jacob Perron 2   3. Chris Lalancette 2    "},{"id":122,"href":"/packages/ros_testing/","title":"ros_testing","parent":"Contents","content":"ros_testing\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ros_testing/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ros_testing\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jacob Perron 2   2. Chris Lalancette 2   3. Keisuke Shima 1    "},{"id":123,"href":"/packages/scenario_simulator_launch/","title":"scenario_simulator_launch","parent":"Contents","content":"scenario_simulator_launch\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/scenario_simulator_launch/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/scenario_simulator_launch\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Daniel Marczak 1   2. mitsudome-r 1   3. Adam Dąbrowski 1    "},{"id":124,"href":"/packages/signal_filters/","title":"signal_filters","parent":"Contents","content":"signal_filters\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/signal_filters/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/signal_filters\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Christopher Ho 5   2. Joshua Whitley 4   3. MIURA Yasuyuki 3    "},{"id":125,"href":"/packages/simple_planning_simulator/","title":"simple_planning_simulator","parent":"Contents","content":"simple_planning_simulator\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/simple_planning_simulator/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/simple_planning_simulator\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 4   2. Esteve Fernandez 1   3. MIURA Yasuyuki 1    "},{"id":126,"href":"/packages/spinnaker_camera_driver/","title":"spinnaker_camera_driver","parent":"Contents","content":"spinnaker_camera_driver\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_driver/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_driver\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 7   2. Joshua Whitley 4   3. Rafal Kotynski 1    "},{"id":127,"href":"/packages/spinnaker_camera_nodes/","title":"spinnaker_camera_nodes","parent":"Contents","content":"spinnaker_camera_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/spinnaker_camera_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/spinnaker_camera_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 3   2. Joshua Whitley 2   3. Igor Bogoslavskyi 1    "},{"id":128,"href":"/packages/ssc_interface/","title":"ssc_interface","parent":"Contents","content":"ssc_interface\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/ssc_interface/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/ssc_interface\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 3   2. Joshua Whitley 3   3. Maxime CLEMENT 2    "},{"id":129,"href":"/packages/state_estimation/","title":"state_estimation","parent":"Contents","content":"state_estimation\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 9   2. Nikolai Morin 2   3. Yuki Hara 1    "},{"id":130,"href":"/packages/state_estimation_nodes/","title":"state_estimation_nodes","parent":"Contents","content":"state_estimation_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_estimation_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_estimation_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 7   2. Nikolai Morin 3   3. Yuki Hara 2    "},{"id":131,"href":"/packages/state_vector/","title":"state_vector","parent":"Contents","content":"state_vector\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/state_vector/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/state_vector\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 7   2. Nikolai Morin 1   3. Vincent Richard 1    "},{"id":132,"href":"/tags/","title":"Tags","parent":"Code quality dashboard","content":""},{"id":133,"href":"/packages/test_launch_testing/","title":"test_launch_testing","parent":"Contents","content":"test_launch_testing\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_launch_testing/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_launch_testing\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jacob Perron 5   2. Chris Lalancette 5   3. Michael Carroll 4    "},{"id":134,"href":"/packages/test_trajectory_following/","title":"test_trajectory_following","parent":"Contents","content":"test_trajectory_following\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/test_trajectory_following/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/test_trajectory_following\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 11   2. Esteve Fernandez 8   3. MIURA Yasuyuki 4    "},{"id":135,"href":"/packages/time_utils/","title":"time_utils","parent":"Contents","content":"time_utils\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/time_utils/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/time_utils\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 2   2. Joshua Whitley 2   3. Frederik Beaujean 1    "},{"id":136,"href":"/packages/tracking/","title":"tracking","parent":"Contents","content":"tracking\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Yunus Emre Çalışkan 9   2. Igor Bogoslavskyi 8   3. Nikolai Morin 8    "},{"id":137,"href":"/packages/tracking_nodes/","title":"tracking_nodes","parent":"Contents","content":"tracking_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 4   2. Nikolai Morin 4   3. Gowtham Ranganathan 3    "},{"id":138,"href":"/packages/tracking_test_framework/","title":"tracking_test_framework","parent":"Contents","content":"tracking_test_framework\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tracking_test_framework/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tracking_test_framework\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Igor Bogoslavskyi 2   2. Yuki Hara 1   3. Maxime CLEMENT 1    "},{"id":139,"href":"/packages/trajectory_follower/","title":"trajectory_follower","parent":"Contents","content":"trajectory_follower\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 5   2. Yuki Hara 1   3. Esteve Fernandez 1    "},{"id":140,"href":"/packages/trajectory_follower_nodes/","title":"trajectory_follower_nodes","parent":"Contents","content":"trajectory_follower_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_follower_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_follower_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 11   2. Esteve Fernandez 2   3. MIURA Yasuyuki 1    "},{"id":141,"href":"/packages/trajectory_planner_node_base/","title":"trajectory_planner_node_base","parent":"Contents","content":"trajectory_planner_node_base\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_planner_node_base/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_planner_node_base\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 2   2. MIURA Yasuyuki 1   3. Vincent Richard 1    "},{"id":142,"href":"/packages/trajectory_smoother/","title":"trajectory_smoother","parent":"Contents","content":"trajectory_smoother\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_smoother/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_smoother\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Jilada Eccleston 2   2. Esteve Fernandez 1   3. MIURA Yasuyuki 1    "},{"id":143,"href":"/packages/trajectory_spoofer/","title":"trajectory_spoofer","parent":"Contents","content":"trajectory_spoofer\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/trajectory_spoofer/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/trajectory_spoofer\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Maxime CLEMENT 2   2. Esteve Fernandez 2   3. Frederik Beaujean 2    "},{"id":144,"href":"/packages/tvm_utility/","title":"tvm_utility","parent":"Contents","content":"tvm_utility\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/tvm_utility/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/tvm_utility\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Ambroise Vincent 2   2. Joshua Whitley 1   3. Jilada Eccleston 1    "},{"id":145,"href":"/packages/vehicle_constants_manager/","title":"vehicle_constants_manager","parent":"Contents","content":"vehicle_constants_manager\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_constants_manager/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_constants_manager\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. M. Fatih Cırıt 2   2. Daniel Marczak 1   3.      "},{"id":146,"href":"/packages/vehicle_interface/","title":"vehicle_interface","parent":"Contents","content":"vehicle_interface\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/vehicle_interface/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/vehicle_interface\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Joshua Whitley 8   2. Esteve Fernandez 7   3. MIURA Yasuyuki 5    "},{"id":147,"href":"/packages/velodyne_driver/","title":"velodyne_driver","parent":"Contents","content":"velodyne_driver\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_driver/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_driver\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 7   2. MIURA Yasuyuki 5   3. Joshua Whitley 5    "},{"id":148,"href":"/packages/velodyne_nodes/","title":"velodyne_nodes","parent":"Contents","content":"velodyne_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/velodyne_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/velodyne_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 3   2. Joshua Whitley 2   3. Jilada Eccleston 2    "},{"id":149,"href":"/packages/voxel_grid/","title":"voxel_grid","parent":"Contents","content":"voxel_grid\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. MIURA Yasuyuki 6   2. Esteve Fernandez 6   3. Joshua Whitley 5    "},{"id":150,"href":"/packages/voxel_grid_nodes/","title":"voxel_grid_nodes","parent":"Contents","content":"voxel_grid_nodes\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/voxel_grid_nodes/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/voxel_grid_nodes\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. Esteve Fernandez 19   2. Joshua Whitley 7   3. MIURA Yasuyuki 5    "},{"id":151,"href":"/packages/xsens_driver/","title":"xsens_driver","parent":"Contents","content":"xsens_driver\n Test result Code coverage Test label: all     json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/coverage.all.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/coverage.all.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: gtest    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/coverage.gtest.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/coverage.gtest.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: smoke_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/coverage.smoke_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/coverage.smoke_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Test label: launch_test    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/coverage.launch_test.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/coverage.launch_test.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code coverage here.  Code metrics CCN    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/ccn.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/ccn.json', fig.data, fig.layout, {responsive: true}); });  LOC    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/nloc.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/nloc.json', fig.data, fig.layout, {responsive: true}); });  Parameter    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/parameter.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/parameter.json', fig.data, fig.layout, {responsive: true}); });   You can access more detailed data on code metrics here.  Code frequency    json_url = \"https://keisukeshima.github.io/autoware-auto-metrics-dashboard/\" + \"plotly/xsens_driver/code_frequency_graph.json\" Plotly.d3.json(json_url, function(err, fig) { Plotly.plot('plotly\\/xsens_driver\\/code_frequency_graph.json', fig.data, fig.layout, {responsive: true}); });     Top3 contributors  1. MIURA Yasuyuki 4   2. Joshua Whitley 4   3. Igor Bogoslavskyi 1    "}]